[tool.poetry]
name = "cyberagents"
version = "0.1.0"
description = "A Python project for cyber intelligence agents"
authors = ["Naor Penso <contact@naorpenso.com>"]
packages = [
    { include = "api" },
    { include = "agents" },
    { include = "tools" },
    { include = "utils" },
    { include = "tests", format = "sdist" }
]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
pyyaml = "^6.0.1"
jsonschema = "^4.21.1"
pytest = "^8.0.0"
pytest-asyncio = "0.26.0"
pre-commit = "^4.2.0"
black = "^25.1.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
fastapi = "0.115.12"
uvicorn = "0.34.0"
pydantic = "^2.6.1"
crewai = "^0.108.0"
python-dotenv = "^1.0.1"
python-whois = "0.9.5"
dnspython = "^2.4.2"
requests = "^2.31.0"
vt-py = "0.20.0"
langchain = "^0.1.0"
langchain-openai = "^0.1.0"
openai = "^1.6.1"
opentelemetry-api = "1.31.1"
opentelemetry-sdk = "1.31.1"
opentelemetry-instrumentation = "0.52b1"
opentelemetry-exporter-otlp = "1.31.1"
opentelemetry-instrumentation-logging = "0.52b1"
opentelemetry-instrumentation-requests = "0.52b1"
opentelemetry-instrumentation-asyncpg = "0.52b1"
pytest-picked = "0.5.1"
rich = ">=13.7.1,<13.10.0"
shodan = "^1.31.0"
ipwhois = "^1.3.0"
python-nmap = "^0.7.1"
pytest-mock = "^3.12.0"
typer = "0.15.2"
opentelemetry-proto = "1.31.1"
opentelemetry-exporter-otlp-proto-common = "1.31.1"
opentelemetry-exporter-otlp-proto-grpc = "1.31.1"
opentelemetry-exporter-otlp-proto-http = "1.31.1"
opentelemetry-instrumentation-asgi = "0.52b1"
opentelemetry-instrumentation-fastapi = "0.52b1"
opentelemetry-semantic-conventions = "0.52b1"
opentelemetry-util-http = "0.52b1"
boto3 = "^1.37.33"
azure-mgmt-frontdoor = "^1.2.0"
azure-identity = "^1.21.0"

[tool.poetry.extras]
test = ["pytest-picked"]

[tool.poetry.group.dev.dependencies]
check-jsonschema = "^0.32.1"
autopep8 = "^2.3.2"
flake8-bugbear = "^24.12.12"
pytest-asyncio = "^0.26.0"
responses = "^0.25.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
filterwarnings = [
    "ignore::DeprecationWarning:pydantic.*:",
    "ignore::UserWarning:pydantic.*:",
    "ignore::DeprecationWarning:pkg_resources.*:",
    "ignore:open_text is deprecated. Use files():DeprecationWarning:litellm.*"
]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.flake8]
exclude = [
    ".git",
    "__pycache__",
    "docs",
    "venv",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]
max-line-length = 88
extend-ignore = ["E203"] # Ignore whitespace before ':' (compatible with black)
